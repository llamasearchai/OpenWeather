[tox]
envlist = 
    py{39,310,311,312}
    lint
    security
    type-check
    docs
    coverage
    performance
    integration
isolated_build = true
skip_missing_interpreters = true

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
deps =
    pytest>=7.4.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.1.0
    pytest-mock>=3.12.0
    pytest-xdist>=3.5.0
    pytest-benchmark>=4.0.0
    hypothesis>=6.92.0
    factory-boy>=3.3.0
    respx>=0.20.0
    httpx>=0.25.0
    redis>=5.0.0
extras = 
    full
    monitoring
commands =
    pytest {posargs} \
        --cov=openweather \
        --cov-report=term-missing \
        --cov-report=html:htmlcov-{envname} \
        --cov-report=xml:coverage-{envname}.xml \
        --cov-fail-under=85 \
        --tb=short \
        -n auto
setenv =
    PYTHONPATH = {toxinidir}
    COVERAGE_FILE = .coverage.{envname}
    ENVIRONMENT = testing
    LOG_LEVEL = DEBUG

[testenv:lint]
deps =
    black>=23.11.0
    isort>=5.12.0
    ruff>=0.1.6
    flake8>=6.1.0
commands =
    black --check --diff openweather tests
    isort --check-only --diff openweather tests
    ruff check openweather tests
    flake8 openweather tests

[testenv:format]
deps =
    black>=23.11.0
    isort>=5.12.0
    ruff>=0.1.6
commands =
    black openweather tests
    isort openweather tests
    ruff check --fix openweather tests

[testenv:type-check]
deps =
    mypy>=1.7.0
    types-redis
    types-requests
    types-PyYAML
    types-python-dateutil
    pydantic>=2.5.0
commands =
    mypy openweather

[testenv:security]
deps =
    bandit>=1.7.5
    safety>=2.3.0
commands =
    bandit -r openweather -f json -o bandit-report.json
    bandit -r openweather
    safety check --json --output safety-report.json
    safety check

[testenv:docs]
deps =
    mkdocs>=1.5.0
    mkdocs-material>=9.4.0
    mkdocs-mermaid2-plugin>=1.1.0
    sphinx>=7.2.0
    sphinx-rtd-theme>=1.3.0
    sphinx-autodoc-typehints>=1.25.0
commands =
    mkdocs build --strict --verbose
    sphinx-build -W -b html docs docs/_build/html

[testenv:coverage]
deps =
    {[testenv]deps}
    coverage[toml]>=7.0.0
commands =
    coverage combine
    coverage report --show-missing
    coverage html
    coverage xml
depends = py{39,310,311,312}

[testenv:performance]
deps =
    {[testenv]deps}
    pytest-benchmark>=4.0.0
    memory-profiler>=0.61.0
commands =
    pytest tests/performance/ \
        --benchmark-only \
        --benchmark-json=benchmark-results.json \
        --benchmark-histogram=benchmark-histogram

[testenv:integration]
deps =
    {[testenv]deps}
    docker>=6.1.0
    testcontainers>=3.7.0
commands =
    pytest tests/integration/ \
        --tb=short \
        -v \
        -m integration

[testenv:unit]
deps = {[testenv]deps}
commands =
    pytest tests/unit/ \
        --cov=openweather \
        --cov-report=term-missing \
        -m "unit and not slow" \
        {posargs}

[testenv:api]
deps = {[testenv]deps}
commands =
    pytest tests/api/ \
        --cov=openweather/api \
        --cov-report=term-missing \
        -m api \
        {posargs}

[testenv:drone]
deps = 
    {[testenv]deps}
extras = drone
commands =
    pytest tests/drone/ \
        --cov=openweather/drone \
        --cov-report=term-missing \
        -m drone \
        {posargs}

[testenv:llm]
deps = {[testenv]deps}
commands =
    pytest tests/llm/ \
        --cov=openweather/llm \
        --cov-report=term-missing \
        -m llm \
        {posargs}

[testenv:dev]
deps =
    {[testenv]deps}
    jupyter>=1.0.0
    ipykernel>=6.26.0
    pre-commit>=3.5.0
commands =
    pre-commit install
    pre-commit run --all-files

[testenv:build]
deps =
    build>=1.0.0
    twine>=4.0.0
commands =
    python -m build
    twine check dist/*

[testenv:clean]
deps = coverage[toml]
commands =
    coverage erase
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
allowlist_externals = 
    python
    rm
    find 